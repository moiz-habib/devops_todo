- hosts: swarm
  become: true
  become_method: sudo
  become_user: root

  vars:
    ghcr_user: "{{ lookup('env','GHCR_USER') }}"
    ghcr_token: "{{ lookup('env','GHCR_TOKEN') }}"

  tasks:
    - name: Ensure .ssh directory for ubuntu
      file:
        path: /home/ubuntu/.ssh
        state: directory
        mode: "0700"
        owner: ubuntu
        group: ubuntu

    - name: Install Git if missing
      ansible.builtin.apt:
        name: git
        state: present
        update_cache: yes

    - name: Install private key for repo access
      copy:
        dest: /home/ubuntu/.ssh/id_rsa
        content: "{{ lookup('env','REPO_SSH_KEY') }}"
        owner: ubuntu
        group: ubuntu
        mode: "0600"

    - name: Ensure SSH key has correct permissions
      file:
        path: /home/ubuntu/.ssh/id_rsa
        owner: ubuntu
        group: ubuntu
        mode: "0600"

    - name: Add GitHub.com to known_hosts for ubuntu
      become: true
      become_user: ubuntu
      ansible.builtin.known_hosts:
        path: /home/ubuntu/.ssh/known_hosts
        name: github.com
        key: "{{ lookup('pipe','ssh-keyscan github.com') }}"
        state: present

    - name: Debug - Check if SSH key exists and has correct permissions
      become: true
      become_user: ubuntu
      shell: ls -la /home/ubuntu/.ssh/id_rsa
      register: ssh_key_check

    - name: Display SSH key info
      debug:
        var: ssh_key_check

    - name: Debug - Check SSH key format
      become: true
      become_user: ubuntu
      shell: head -1 /home/ubuntu/.ssh/id_rsa && tail -1 /home/ubuntu/.ssh/id_rsa
      register: ssh_key_format

    - name: Display SSH key format
      debug:
        var: ssh_key_format

    - name: Test SSH connection to GitHub (will fail but shows details)
      become: true
      become_user: ubuntu
      shell: ssh -i /home/ubuntu/.ssh/id_rsa -o StrictHostKeyChecking=no -vT git@github.com
      register: ssh_debug
      failed_when: false

    - name: Display SSH debug info
      debug:
        var: ssh_debug

    - name: Clone or update private todo-app repo via SSH
      become: true
      become_user: ubuntu
      ansible.builtin.git:
        repo: git@github.com:moiz-habib/devops_todo.git
        dest: /home/ubuntu/todo-app
        key_file: /home/ubuntu/.ssh/id_rsa
        accept_hostkey: yes
        update: yes
        force: yes

    - name: Wait for cloud-init to finish
      wait_for:
        path: /var/lib/cloud/instance/boot-finished
        state: present
        timeout: 120

    - name: Update apt cache (with retries)
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        update_cache_retries: 5
        update_cache_retry_max_delay: 10

    - name: Install Docker prerequisites
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker apt repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable

    - name: Install Docker Engine
      ansible.builtin.apt:
        name: docker-ce
        update_cache: yes

    - name: Ensure Docker is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Initialize Docker Swarm
      shell: docker swarm init || true

    - name: Log in to GitHub Container Registry
      community.docker.docker_login:
        registry_url: ghcr.io
        username: "{{ ghcr_user }}"
        password: "{{ ghcr_token }}"

    - name: Pull latest backend image from GHCR
      community.docker.docker_image:
        name: ghcr.io/{{ ghcr_user }}/fastapi-todo
        tag: latest
        source: pull

    - name: Pull latest frontend image from GHCR
      community.docker.docker_image:
        name: ghcr.io/{{ ghcr_user }}/todo-frontend
        tag: latest
        source: pull

    - name: Deploy Docker Swarm stack
      shell: docker stack deploy -c /opt/todo-app/docker-stack.yml todo-app
